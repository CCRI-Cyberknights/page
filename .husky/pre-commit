#!/bin/bash
. "$(dirname -- "$0")/_/husky.sh"

cd "$(dirname -- "$0")/.."

# Check if any HTML files have been modified
if git diff --cached --name-only | grep -q "\.html$"; then
    echo "🔗 HTML files changed - analyzing changes..."
    
    # Check if only index.html was changed
    html_files=$(git diff --cached --name-only | grep "\.html$")
    if [ "$html_files" = "index.html" ]; then
        echo "📄 Only index.html changed - checking if changes are version-only..."
        
        # Get the diff for index.html
        index_diff=$(git diff --cached index.html)
        
        # Check if the diff only contains version-related changes
        # Look for the specific patterns that the version bumping script updates:
        # 1. Meta tag: <meta name="version" content="...">
        # 2. Footer span: <span id="version"...>v...
        
        # Count version-related changes (DRY JavaScript constants)
        version_const_changes=$(echo "$index_diff" | grep -cE "^[+-].*const VERSION" || echo "0")
        commit_hash_changes=$(echo "$index_diff" | grep -cE "^[+-].*const COMMIT_HASH" || echo "0")
        commit_date_changes=$(echo "$index_diff" | grep -cE "^[+-].*const COMMIT_DATE" || echo "0")
        
        # Count total non-context changes (lines starting with + or - but not diff headers)
        total_changes=$(echo "$index_diff" | grep -cE "^[+-][^+-]" || echo "0")
        
        # Calculate total version-related changes
        total_version_changes=$((version_const_changes + commit_hash_changes + commit_date_changes))
        
        echo "🔍 Analysis: $total_version_changes version changes out of $total_changes total changes"
        
        # If all changes are version-related, skip link tests
        if [ "$total_version_changes" -gt 0 ] && [ "$total_version_changes" -eq "$total_changes" ]; then
            echo "✅ Only version numbers changed in index.html - skipping link tests"
            npm run version:auto
            exit 0
        else
            echo "🔍 Non-version changes detected in index.html - running link tests..."
        fi
    else
        echo "🔍 Multiple HTML files changed - running link tests..."
    fi
    
    echo "🔗 Running parallel link tests..."
    . ./selenium_env/bin/activate
    
    # Test production URL first
    echo "🌐 Testing production URL: https://ccri-cyberknights.github.io/page"
    python3 scripts/test-links-dynamic-parallel.py "https://ccri-cyberknights.github.io/page"
    
    if [ $? -ne 0 ]; then
        echo "❌ Production link testing failed! Please fix broken links before committing."
        exit 1
    fi
    
    # Test local URL
    echo "🏠 Testing local URL: http://localhost:8000"
    python3 scripts/test-links-dynamic-parallel.py "http://localhost:8000"
    
    # Check if both link tests passed
    if [ $? -eq 0 ]; then
        echo "✅ All links are working correctly on both production and local. Proceeding with version bump..."
        npm run version:auto
    else
        echo "❌ Local link testing failed! Please fix broken links before committing."
        exit 1
    fi
else
    echo "📄 No HTML files changed - skipping link tests"
    npm run version:auto
fi